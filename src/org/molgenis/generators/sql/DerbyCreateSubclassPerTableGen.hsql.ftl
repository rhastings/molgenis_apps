<#setting number_format="#"/>
<#include "GeneratorHelper.ftl">
<#include "HsqlHelper.ftl">
<#--#####################################################################-->
<#--                                                                   ##-->
<#--         START OF THE OUTPUT                                       ##-->
<#--                                                                   ##-->
<#--#####################################################################-->
<#-- Generate a table for each concrete class (so, not abstract) -->
<#if !entity.isAbstract()>
CREATE TABLE ${SqlName(entity)} (
<#list dbFields(entity) as f>
	<#if f_index != 0>, </#if><@compress single_line=true>
	${SqlName(f)} ${hsql_type(model,f)}
	<#if f.getDefaultValue()?exists && f.getDefaultValue() != "" && f.type != "text" && f.type != "blob"> DEFAULT <#if f.type == "bool" || f.type == "int">${f.getDefaultValue()}<#else>'${f.getDefaultValue()}'</#if></#if>
	<#if f.auto && f.type == "int"> GENERATED BY DEFAULT AS IDENTITY </#if>	
	<#if !f.nillable> NOT NULL</#if>	
	</@compress>
<#--<#if f.type == "xref">
	, FOREIGN KEY (${SqlName(f)}) REFERENCES ${SqlName(model.getEntity(f.XRefEntity).getRootAncestor() )} (${SqlName(f.XRefField)}) ON DELETE RESTRICT
</#if>-->

</#list>
<#list entity.getKeys() as key>
<#if key_index == 0>
	, PRIMARY KEY(${csv(key.fields)})
<#else>
	, UNIQUE(${csv(key.fields)})
</#if>
</#list>
<#list entity.getIndices() as i>
	, INDEX ${SqlName(i)} (${csv(i.fields)})
</#list>
);
<#--need innodb to support transactions. Do not change! If you need MyISAM, we can make this an generator option-->
<#--http://www.mysql.org/doc/refman/5.1/en/multiple-tablespaces.html for one file per table innodb-->
</#if>